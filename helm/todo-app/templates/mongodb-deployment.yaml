{{- if .Values.mongodb.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "todo-app.fullname" . }}-mongodb
  labels:
    {{- include "todo-app.labels" . | nindent 4 }}
    component: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "todo-app.selectorLabels" . | nindent 6 }}
      component: mongodb
  template:
    metadata:
      labels:
        {{- include "todo-app.selectorLabels" . | nindent 8 }}
        component: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0
        ports:
        - containerPort: {{ .Values.mongodb.service.port }}
          name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongodb.auth.existingSecret | quote }}
              key: {{ .Values.mongodb.auth.secretKey | quote }}
        - name: MONGO_INITDB_DATABASE
          value: {{ .Values.mongodb.auth.database | quote }}
        {{- if .Values.mongodb.persistence.enabled }}
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        {{- end }}
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          tcpSocket:
            port: mongodb
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: mongodb
          initialDelaySeconds: 5
          periodSeconds: 5
      {{- if .Values.mongodb.persistence.enabled }}
      volumes:
      - name: mongodb-storage
        persistentVolumeClaim:
          claimName: {{ include "todo-app.fullname" . }}-mongodb-pvc
      {{- end }}
{{- end }}