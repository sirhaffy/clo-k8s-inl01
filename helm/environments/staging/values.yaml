# Staging environment values for todo-app
replicaCount: 2

image:
  repository: todoapp
  pullPolicy: Always
  tag: "latest"

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
  hosts:
    - host: todo-app-staging.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: todo-app-staging-tls
      hosts:
        - todo-app-staging.yourdomain.com

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 250m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# MongoDB configuration for staging
mongodb:
  enabled: true
  auth:
    enabled: true
    rootUser: "admin"
    existingSecret: "mongodb-secret"
  persistence:
    enabled: true
    size: 10Gi
    storageClass: "managed"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  replicaSet:
    enabled: false
  backup:
    enabled: false

# Security configurations (relaxed for testing)
podSecurityContext:
  fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

# Azure Key Vault integration
keyVault:
  enabled: true
  name: "kv-todo-app-staging"
  secrets:
    - secretName: "mongodb-connection-string"
      objectName: "mongodb-connection-string"
    - secretName: "app-secret-key"
      objectName: "app-secret-key"

# Network policies (less restrictive)
networkPolicy:
  enabled: false

# Environment-specific labels
labels:
  environment: "staging"
  team: "platform"
  cost-center: "engineering"

# Additional staging-specific configurations
debug:
  enabled: true
  logLevel: "debug"

# Test data initialization
testData:
  enabled: true
  seedDatabase: true