name: CI Pipeline

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'src/**'
  pull_request:
    branches:
      - master
      - main
    paths:
      - 'src/**'

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/todo-app
  HELM_CHART_PATH: helm/todo-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Generate version tag
      id: version
      run: |
        # Generate version based on git commit
        VERSION="v$(date +%Y%m%d)-${GITHUB_SHA::7}"
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./src
        file: ./src/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Display build info
      run: |
        echo "âœ… CI Pipeline completed successfully!"
        echo "ðŸ“¦ Docker image built and pushed:"
        echo "   - ${{ env.DOCKER_IMAGE }}:latest"
        echo "   - ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.VERSION }}"
        echo ""
        echo "ðŸŽ¯ Next steps:"
        echo "   - ArgoCD will handle deployment"
        echo "   - Manually update Helm chart if needed"
        echo "   - New image tag: ${{ steps.version.outputs.VERSION }}"