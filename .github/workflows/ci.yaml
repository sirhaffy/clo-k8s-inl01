name: CI Pipeline

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'todo-app/src/**'
  pull_request:
    branches:
      - master
      - main
    paths:
      - 'todo-app/src/**'

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/todo-app
  HELM_CHART_PATH: todo-app/helm/todo-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Generate version tag
      id: version
      run: |
        # Generate version based on git commit
        VERSION="v$(date +%Y%m%d)-${GITHUB_SHA::7}"
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./todo-app/src
        file: ./todo-app/src/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Helm chart with new image tag
      run: |
        # Update deployment.yaml with new image tag
        sed -i "s|image: ${{ env.DOCKER_IMAGE }}:.*|image: ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.VERSION }}|g" \
          ${{ env.HELM_CHART_PATH }}/templates/deployment.yaml

        # Update Chart.yaml version
        sed -i "s|version: .*|version: $(echo ${{ steps.version.outputs.VERSION }} | sed 's/v//')|g" \
          ${{ env.HELM_CHART_PATH }}/Chart.yaml

        # Update appVersion in Chart.yaml
        sed -i "s|appVersion: .*|appVersion: \"${{ steps.version.outputs.VERSION }}\"|g" \
          ${{ env.HELM_CHART_PATH }}/Chart.yaml

    - name: Commit updated Helm charts
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ${{ env.HELM_CHART_PATH }}/
        git diff --staged --quiet || git commit -m "chore: update helm chart to ${{ steps.version.outputs.VERSION }}"
        git push

    - name: Summary
      if: always()
      run: |
        echo "CI Pipeline completed successfully!" >> $GITHUB_STEP_SUMMARY
        echo "Docker image: ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "ArgoCD will handle deployment from updated Helm charts" >> $GITHUB_STEP_SUMMARY